kubectl get deployments -o json | jq -r '.items[] | {namespace: .metadata.namespace, name: .metadata.name, containers: .spec.template.spec.containers[]} | [ .namespace, .name, (.containers | map(.resources.requests.cpu // "0") | map(sub("m";"") | tonumber) | add // 0) ] | @csv' | awk -F, 'NR==FNR{a[$1","$2]+=$3;next} {gsub("m","",$4);if($1","$2 in a) b[$1","$2]+=$4} END{for (i in a) print i, a[i]-(b[i]*1000)}' - <(kubectl top pods --all-namespaces --containers -o json | jq -r '.items[] | {namespace: .namespace, pod: .pod, containers: .containers[]} | .containers[] | [ .namespace, .pod, .name, .usage.cpu ] | @csv') | sort -t, -k3,3nr | head -n 10


kubectl get deployments --all-namespaces -o json | jq -r '.items[] | .metadata.namespace as $ns | .metadata.name as $dep | .spec.template.spec.containers[] | .resources.requests.cpu as $cpu | [$ns, $dep, ($cpu // "0" | sub("m"; "") | tonumber)] | @csv' > requested_resources.csv && kubectl top pods --all-namespaces --containers | awk 'NR > 1 {namespace = $1; pod = $2; container = $3; cpu = $4; gsub("m", "", cpu); print namespace","pod","container","cpu}' > pod_usage.csv && awk -F, 'NR==FNR {requested[$1","$2] += $3; next} {pod_key = $1","$2","$3; used = $4; if (pod_key in requested) used_cpu[$1","$2] += used} END {for (key in requested) {diff = requested[key] - (used_cpu[key] * 1000); split(key, parts, ","); print parts[2]","diff}}' requested_resources.csv pod_usage.csv | sort -t, -k2,2nr | head -n 10

kubectl get deployments -n my-namespace -o json | jq -r '.items[] | .metadata.namespace as $ns | .metadata.name as $dep | .spec.template.spec.containers[] | .resources.requests.cpu as $cpu | [$ns, $dep, ($cpu // "0" | sub("m"; "") | tonumber)] | @csv' > requested_resources.csv && kubectl top pods -n my-namespace --containers | awk 'NR > 1 {namespace = $1; pod = $2; container = $3; cpu = $4; gsub("m", "", cpu); print namespace","pod","container","cpu}' > pod_usage.csv && awk -F, 'NR==FNR {requested[$1","$2] += $3; next} {pod_key = $1","$2","$3; used = $4; if (pod_key in requested) used_cpu[$1","$2] += used} END {for (key in requested) {diff = requested[key] - (used_cpu[key] * 1000); split(key, parts, ","); print parts[2]","diff}}' requested_resources.csv pod_usage.csv | sort -t, -k2,2nr | head -n 10

kubectl get deployments -n my-namespace -o json | jq -r '.items[] | .metadata.name as $dep | .spec.template.spec.containers[] | .resources.requests.cpu as $cpu | [$dep, ($cpu // "0" | sub("m"; "") | tonumber)] | @csv' > requested_resources.csv && kubectl top pods -n my-namespace --containers | awk 'NR > 1 {pod = $2; container = $3; cpu = $4; gsub("m", "", cpu); print pod","container","cpu}' > pod_usage.csv && awk -F, 'NR==FNR {requested[$1] += $2; next} {pod_key = $1; used = $3; used_cpu[pod_key] += used} END {print "Déploiement,Alloué (m),Utilisé (m),Différence (m)"; for (key in requested) {diff = requested[key] - (used_cpu[key] * 1000); printf "%s,%d,%d,%d\n", key, requested[key], (used_cpu[key] * 1000), diff}}' requested_resources.csv pod_usage.csv | sort -t, -k4,4nr | head -n 10 | column -t -s,


kubectl get deployments -n my-namespace -o=jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.spec.template.spec.containers[0].resources.requests.cpu}{"\n"}' > requested_resources.txt && \
kubectl top pods -n my-namespace --containers | awk 'NR > 1 {print $2 "\t" $4}' > pod_usage.txt && \
join -1 1 -2 1 <(sort requested_resources.txt) <(sort pod_usage.txt) | awk 'BEGIN {print "Déploiement\tAlloué (m)\tUtilisé (m)\tDifférence (m)"} {diff = ($2 - $3); printf "%s\t%s\t%s\t%s\n", $1, $2, $3, diff}' | column -t -s $'\t'

